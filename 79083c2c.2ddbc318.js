(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var s=n(2),o=n(6),r=(n(0),n(72)),a={id:"format",title:"The Jyfti Format"},i={unversionedId:"format",id:"format",isDocsHomePage:!1,title:"The Jyfti Format",description:"Steps",source:"@site/docs/format.md",permalink:"/jyfti/docs/format",editUrl:"https://github.com/jyfti/jyfti/edit/master/website/docs/format.md",sidebar:"someSidebar",previous:{title:"Usage",permalink:"/jyfti/docs/usage"}},p=[{value:"Steps",id:"steps",children:[{value:"Request steps",id:"request-steps",children:[]},{value:"Expression steps",id:"expression-steps",children:[]},{value:"For-comprehensions",id:"for-comprehensions",children:[]}]}],c={rightToc:p};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(s.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"steps"},"Steps"),Object(r.b)("p",null,"There are three different types of steps."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Request steps"),Object(r.b)("li",{parentName:"ul"},"Expression steps"),Object(r.b)("li",{parentName:"ul"},"For-comprehensions")),Object(r.b)("h3",{id:"request-steps"},"Request steps"),Object(r.b)("p",null,"A request step defines a single http request."),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-json"}),'{\n  "assignTo": "readmeResponse",\n  "request": {\n    "method": "GET",\n    "url": "https://raw.githubusercontent.com/${org}/${repo}/master/README.md",\n    "body": {\n      "$eval": "${previousResponse.body}"\n    },\n    "headers": {\n      "Authorization": "Bearer ${token}"\n    }\n  }\n}\n')),Object(r.b)("p",null,"It requires a ",Object(r.b)("inlineCode",{parentName:"p"},"url")," and optionally accepts a ",Object(r.b)("inlineCode",{parentName:"p"},"method"),", ",Object(r.b)("inlineCode",{parentName:"p"},"body")," and ",Object(r.b)("inlineCode",{parentName:"p"},"headers"),".\nEach of these fields is evaluated as a ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://json-e.js.org/"}),"JSON-e expression"),"."),Object(r.b)("h3",{id:"expression-steps"},"Expression steps"),Object(r.b)("p",null,"An expression defines a transformation from one json object into another.\nIt is useful to transform the output of one request step into the input of another request step."),Object(r.b)("pre",null,Object(r.b)("code",Object(s.a)({parentName:"pre"},{className:"language-json"}),'{\n  "assignTo": "variable",\n  "expression": {\n    "e": "${a.b}"\n  }\n}\n')),Object(r.b)("p",null,"The value of the ",Object(r.b)("inlineCode",{parentName:"p"},"expression")," field is defined as a ",Object(r.b)("a",Object(s.a)({parentName:"p"},{href:"https://json-e.js.org/"}),"JSON-e expression"),"."),Object(r.b)("h3",{id:"for-comprehensions"},"For-comprehensions"),Object(r.b)("p",null,"// TODO: Describe via REST example"))}b.isMDXComponent=!0}}]);