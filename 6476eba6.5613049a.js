(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{61:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),i=(n(0),n(73)),o={id:"usage",title:"Usage"},s={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Running a workflow",source:"@site/docs/usage.md",permalink:"/jyfti/docs/usage",editUrl:"https://github.com/jyfti/jyfti/edit/master/website/docs/usage.md",sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/jyfti/docs/"},next:{title:"The Jyfti Format",permalink:"/jyfti/docs/format"}},c=[{value:"Running a workflow",id:"running-a-workflow",children:[]},{value:"Step-by-step execution",id:"step-by-step-execution",children:[]},{value:"Environments",id:"environments",children:[]}],l={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"running-a-workflow"},"Running a workflow"),Object(i.b)("p",null,"Run your first workflow."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"$ jyfti run https://raw.githubusercontent.com/jyfti/jyfti/master/workflows/retrieve-readme.json\n")),Object(i.b)("p",null,"Jyfti runs remote and local workflows.\nThe preferred way of developing workflows is within a local Jyfti project."),Object(i.b)("p",null,"Initialize a Jyfti project within your current directory."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"$ jyfti init\n")),Object(i.b)("p",null,"This results in a ",Object(i.b)("inlineCode",{parentName:"p"},"jyfti.json")," to be created where the configuration for your Jyfti project resides."),Object(i.b)("p",null,"Then, generate your first workflow."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"$ jyfti generate workflow retrieve-readme\n")),Object(i.b)("p",null,"The workflow is generated into the ",Object(i.b)("inlineCode",{parentName:"p"},"sourceRoot")," directory as ",Object(i.b)("inlineCode",{parentName:"p"},"retrieve-readme.json"),".\nIt serves you as a foundation to create your first productive workflow."),Object(i.b)("p",null,"Run the workflow to completion."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"$ jyfti run retrieve-readme\n? The GitHub organization (jyfti)\n? The GitHub repository (jyfti)\n")),Object(i.b)("p",null,"Jyfti prompts for inputs that the workflow expects.\nNote that inputs can also be passed directly."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"$ jyfti run retrieve-readme jyfti jyfti\n")),Object(i.b)("h2",{id:"step-by-step-execution"},"Step-by-step execution"),Object(i.b)("p",null,"While ",Object(i.b)("inlineCode",{parentName:"p"},"jyfti run <name>")," executes a workflow from start to finish, Jifty can also execute a workflow step-by-step persisting intermediate states to disk."),Object(i.b)("p",null,"A step-by-step workflow run is created via the ",Object(i.b)("inlineCode",{parentName:"p"},"create")," subcommand."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ jyfti run create retrieve-readme jyfti jyfti\nInitialized\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"create")," subcommand validates the input and writes the initial state to disk.\nThe run can get advanced with the ",Object(i.b)("inlineCode",{parentName:"p"},"step")," subcommand."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ jyfti run step retrieve-readme\nCompleted 0\n")),Object(i.b)("p",null,"At any point, the status, the state and the variables can be requested."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'$ jyfti run status retrieve-readme\n[Pending] At step [0]\n$ jyfti run state retrieve-readme\n{\n  "path": [\n    0\n  ],\n  "inputs": {\n    "org": "jyfti",\n    "repo": "jyfti"\n  },\n  "evaluations": []\n}\n$ jyfti run vars retrieve-readme\n{\n  "org": "jyfti",\n  "repo": "jyfti"\n}\n')),Object(i.b)("p",null,"A call to ",Object(i.b)("inlineCode",{parentName:"p"},"complete")," runs it to completion."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ jyfti run complete retrieve-readme\nCompleted 0\n")),Object(i.b)("h2",{id:"environments"},"Environments"),Object(i.b)("p",null,"Besides inputs, a workflow run accepts an environment.\nWhile inputs are passed as values, an environment is passed as a reference to an environment file.\nThe environment files are stored in the environment directory defined via ",Object(i.b)("inlineCode",{parentName:"p"},"envRoot")," in the ",Object(i.b)("inlineCode",{parentName:"p"},"jyfti.json"),"."),Object(i.b)("p",null,"You can list the existing environments."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ jyfti environment list\ndefault\nprod\nlocal\n")),Object(i.b)("p",null,"Even if no environment files exists, there is always the default environment.\nThis environment is also used each time an environment is not explicitly passed."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ jyfti run retrieve-readme -e default\n")),Object(i.b)("p",null,"An environment is a JSON object where each key can be assigned an arbitrary json value.\nIt can be viewed which prints the environment file."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'$ jyfti environment view local\n{\n  "baseUrl": "http://localhost:8080/"\n}\n')))}b.isMDXComponent=!0}}]);